#!/bin/bash

set -euo pipefail; [[ -z ${TRACE:-} ]] || set -x

die() {
	echo >&2 "$@"
	exit 1
}

[[ "$(whoami)" == "dokku" ]] || die "Script must be run as dokku!"

pushd() {
    command pushd "$@" > /dev/null
}

popd() {
    command popd > /dev/null
}

# Older dokku versions doesn't have "plugin:installed" command
has_plugin() {
	grep -q "$1" <<< "$plugin_list"
}

backup_dir="/var/lib/dokku/data/autodokkubackup"

do_weekly=7						# Which day do you want weekly backups? (1 to 7 where 1 is Monday)
do_monthly=01						# Which day do you want monthly backups?
datetimestamp=$(date +%Y-%m-%d_%Hh%Mm)			# Datestamp e.g 2002-09-21
date_day_of_week=$(date +%A)				# Day of the week e.g. Monday
date_dayno_of_week=$(date +%u)				# Day number of the week 1 to 7 where 1 represents Monday
date_day_of_month=$(date +%e | sed -e 's/^ //')		# Date of the Month e.g. 27
date_month=$(date +%B)					# Month e.g January
date_weekno=$(date +%V | sed -e 's/^0//')		# Week Number e.g 37

postgres_backup() {
	rotate=$1
	postgres_databases=$(dokku postgres:list | awk 'NR > 1 {print $1}')

	pushd "$backup_dir"/postgres/"$rotate"
	for db in $postgres_databases; do
		mkdir -p "$db"; pushd "$db"

		case $rotate in
		"monthly")
			dokku postgres:export "$db" > "$db"_"$rotate"."$date_month"."$datetimestamp".dump
			gzip -f "$db"_"$rotate"."$M"."$datetimestamp".dump
			;;
		"weekly")
			if [ "$date_weekno" -le 05 ]; then
				REMW=$((48 + "$date_weekno"))
			elif [ "$date_weekno" -lt 15 ]; then
				REMW=0$(("$date_weekno" - 5))
			else
				REMW=$(("$date_weekno" - 5))
			fi
			rm -fv "$backup_dir"/postgres/"$rotate"/"$db"/"$db"_"$rotate"."$REMW".*
			dokku postgres:export "$db" > "$db"_"$rotate"."$date_weekno"."$datetimestamp".dump
			gzip -f "$db"_"$rotate"."$date_weekno"."$datetimestamp".dump
			;;
		"daily")
			rm -fv "$backup_dir"/postgres/"$rotate"/"$db"/*."$date_day_of_week".dump.*
			dokku postgres:export "$db" > "$db"_"$datetimestamp"."$date_day_of_week".dump
			gzip -f "$db"_"$datetimestamp"."$date_day_of_week".dump
			;;
		esac
		popd
	done
}

mariadb_backup() {
	rotate=$1
	mariadb_databases=$(dokku mariadb:list | awk 'NR > 1 {print $1}')

	pushd "$backup_dir"/mariadb/"$rotate"
	for db in $mariadb_databases; do
		mkdir -p "$db"; pushd "$db"
		case $rotate in
		"monthly")
			dokku mariadb:export "$db" > "$db"_"$rotate"."$date_month"."$datetimestamp".sql
			gzip -f "$db"_"$rotate"."$date_month"."$datetimestamp".sql
			;;
		"weekly")
			if [ "$date_weekno" -le 05 ];then
				REMW=$((48 + "$date_weekno"))
			elif [ "$date_weekno" -lt 15 ];then
				REMW=0$(("$date_weekno" - 5))
			else
				REMW=$(("$date_weekno" - 5))
			fi
			rm -fv "$backup_dir"/mariadb/"$rotate"/"$db"/"$db"_"$rotate"."$REMW".*
			dokku mariadb:export "$db" > "$db"_"$rotate"."$date_weekno"."$datetimestamp".sql
			gzip -f "$db"_"$rotate"."$date_weekno"."$datetimestamp".sql
			;;
		"daily")
			rm -fv "$backup_dir"/mariadb/"$rotate"/"$db"/*."$date_day_of_week".sql.*
			dokku mariadb:export "$db" > "$db"_"$datetimestamp"."$date_day_of_week".sql
			gzip -f "$db"_"$datetimestamp"."$date_day_of_week".sql
			;;
		esac
		popd
	done
}

backup() {
	if has_plugin "postgres"; then
		mkdir -p $backup_dir/postgres/{daily,weekly,monthly}
		postgres_backup "$1"
	fi

	if has_plugin "mariadb"; then
		$backup_dir/mariadb/{daily,weekly,monthly}
		mariadb_backup "$1"
	fi
}

main() {
	plugin_list=$(dokku plugin:list)

	# Monthly Backup
	if [ "$date_day_of_month" = "$do_monthly" ]; then
		backup "monthly"
	# Weekly Backup
	elif [ "$date_dayno_of_week" = "$do_weekly" ]; then
		backup "weekly"
	# Daily Backup
	else
		backup "daily"
	fi
}

main "$@"
